name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4      
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 mypy black      
          
      - name: Check code formatting
        run: black --check .

      - name: Run type checking
        run: mypy src/

      - name: Run linting
        run: flake8 src/

      - name: Run tests with coverage
        run: pytest -v --cov=src --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  notify:
    needs: [quality-check, compliance-check]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Resultado de verificaci√≥n
        run: |
          echo "üìä Resultados de la verificaci√≥n:"
          echo "Quality Check: ${{ needs.quality-check.result }}"
          echo "Compliance Check: ${{ needs.compliance-check.result }}"
          
          if [[ "${{ needs.quality-check.result }}" == "success" && \
                "${{ needs.compliance-check.result }}" == "success" ]]; then
              echo "‚úÖ Verificaci√≥n completa (Quality + ISO 42001)"
          else
              echo "‚ùå Verificaci√≥n fallida - revisa jobs anteriores"
              echo "Detalles disponibles en la pesta√±a Actions del repositorio"
          fi